@page "/product"
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Products</PageTitle>

<h1>Products</h1>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Id</th>
                <th>Description</th>
                <th>Price</th>
              
            </tr>
        </thead>
        <tbody>
            @foreach (var proudct in products)
            {
                <tr>
                    <td>@proudct.ProductId</td>
                    <td>@proudct.Description</td>
                    <td>@proudct.Price</td>
                   
                </tr>
            }
        </tbody>
    </table>
}

@code {


    string currentUri;
    string baseUrl;
    string queryString;

    string productId;
    string productName;

    protected override void OnInitialized()
    {
        // // Get the full URL from the NavigationManager
        // var uri = new Uri(Navigation.Uri);

        // // Parse the query string
        // var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

        // productId = query["id"];
        // productName = query["name"];

        // // Extract 'id' and 'name' parameters
        // if (query.TryGetValue("id", out var id))
        // {
        //     productId = id;
        // }

        // if (query.TryGetValue("name", out var name))
        // {
        //     productName = name;
        // }
    }

    private Product[]? products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<Product[]>("sample-data/product.json");
       
    }

    public class Product
    {
        public string ProductId{ get; set; }

        public string Description { get; set; }

        public string Price { get; set; }
  
    }
}
